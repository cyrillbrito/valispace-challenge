{"version":3,"sources":["./src/app/home/post-card/post-card.component.html","./src/app/home/post-textarea/post-textarea.component.html","./src/app/home/posts/posts.component.html","./src/app/home/home-routing.module.ts","./src/app/home/home.module.ts","./src/app/home/post-card/post-card.component.css","./src/app/home/post-card/post-card.component.ts","./src/app/home/post-textarea/post-textarea.component.css","./src/app/home/post-textarea/post-textarea.component.ts","./src/app/home/posts/posts.component.css","./src/app/home/posts/posts.component.ts","./src/app/services/posts.service.ts"],"names":[],"mappings":"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","file":"home-home-module-es2015.js","sourcesContent":["export default \"<mat-card>\\n\\n  <mat-card-header>\\n    <mat-card-subtitle>{{ post.date }}</mat-card-subtitle>\\n    <button mat-icon-button (click)=\\\"editPost(post)\\\" class=\\\"card-action\\\" *ngIf=\\\"!editing\\\">\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </mat-card-header>\\n\\n  <mat-card-content *ngIf=\\\"editing\\\">\\n    <app-post-textarea [post]=\\\"post\\\"></app-post-textarea>\\n  </mat-card-content>\\n\\n  <mat-card-content *ngIf=\\\"!editing\\\">\\n    <ng-container *ngFor=\\\"let segment of segments\\\">\\n      <span *ngIf=\\\"segment.employee\\\" class=\\\"user-highlight\\\" (click)=\\\"openEmployeeDetails(segment.employee)\\\">\\n        {{ segment.text }}\\n      </span>\\n      <ng-container *ngIf=\\\"!segment.employee\\\">\\n        {{ segment.text }}\\n      </ng-container>\\n    </ng-container>\\n  </mat-card-content>\\n\\n  <mat-card-actions *ngIf=\\\"editing\\\">\\n    <button mat-button (click)=\\\"cancelEdit(post)\\\">CANCEL</button>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"update()\\\">UPDATE POST</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\\n<ng-template #details let-employee>\\n  <h1>{{ employee.name }}</h1>\\n  <mat-divider></mat-divider>\\n  <p>Username: {{ employee.username }}</p>\\n  <p>Phone: {{ employee.phone }}</p>\\n  <p>Role: {{ employee.role }}</p>\\n</ng-template>\"","export default \"<mat-form-field appearance=\\\"outline\\\">\\n  <textarea #textarea matInput placeholder=\\\"What’s happening?\\\" rows=\\\"5\\\" (keydown.@)=\\\"open()\\\" [matAutocomplete]=\\\"auto\\\"\\n    [matAutocompleteDisabled]=\\\"!show\\\" [(ngModel)]=\\\"post.text\\\">\\n  </textarea>\\n</mat-form-field>\\n\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\" (closed)=\\\"close($event)\\\" (optionSelected)=\\\"optionSelected($event)\\\">\\n  <mat-option *ngFor=\\\"let employee of employees$ | async\\\" [value]=\\\"employee.username\\\">\\n    {{ employee.username }}\\n  </mat-option>\\n</mat-autocomplete>\"","export default \"<mat-card>\\n\\n  <mat-card-content>\\n    <app-post-textarea [(post)]=\\\"post\\\"></app-post-textarea>\\n  </mat-card-content>\\n\\n  <mat-card-actions>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"createPost()\\\">CREATE POST</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\\n<mat-divider></mat-divider>\\n\\n<app-post-card *ngFor=\\\"let post of posts$ | async\\\" [post]=\\\"post\\\">\\n</app-post-card>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostsComponent } from './posts/posts.component';\n\nconst routes: Routes = [{ path: '', component: PostsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule\n} from '@angular/material';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { PostCardComponent } from './post-card/post-card.component';\nimport { PostTextareaComponent } from './post-textarea/post-textarea.component';\nimport { PostsComponent } from './posts/posts.component';\n\n\n@NgModule({\n  declarations: [\n    PostCardComponent,\n    PostsComponent,\n    PostTextareaComponent,\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n  ]\n})\nexport class HomeModule { }\n","export default \".mat-card {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.user-highlight {\\r\\n  color: rgb(27, 149, 224);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.user-highlight:hover {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\n.card-action {\\r\\n  margin-left: auto;\\r\\n  margin-top: -10px;\\r\\n}\\r\\n\\r\\n.mat-card .mat-button {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0LWNhcmQvcG9zdC1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Bvc3QtY2FyZC9wb3N0LWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZCB7XHJcbiAgbWFyZ2luOiAyMHB4O1xyXG59XHJcblxyXG4udXNlci1oaWdobGlnaHQge1xyXG4gIGNvbG9yOiByZ2IoMjcsIDE0OSwgMjI0KTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi51c2VyLWhpZ2hsaWdodDpob3ZlciB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuXHJcbi5jYXJkLWFjdGlvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZCAubWF0LWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG4iXX0= */\"","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Employee, Post, PostSegment } from 'src/app/models';\nimport { PostsService } from 'src/app/services/posts.service';\n\n\n@Component({\n  selector: 'app-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.css']\n})\nexport class PostCardComponent implements OnInit {\n\n  @Input() post: Post;\n\n  @ViewChild('details', { static: false }) detailsTemplateRef: TemplateRef<any>;\n\n  public segments: PostSegment[];\n  public editing: boolean;\n\n  private original: string;\n\n  constructor(\n    private postsService: PostsService,\n    public dialog: MatDialog,\n  ) { }\n\n  public ngOnInit() {\n    this.segments = this.postsService.getPostSegments(this.post);\n  }\n\n  public openEmployeeDetails(employee: Employee): void {\n    this.dialog.open(this.detailsTemplateRef, { data: employee });\n  }\n\n  public editPost(post: Post): void {\n    this.editing = true;\n    this.original = post.text;\n  }\n\n  public cancelEdit(post: Post): void {\n    post.text = this.original;\n    this.editing = false;\n  }\n\n  public update(): void {\n    this.postsService.update(this.post).subscribe(() => {\n      this.segments = this.postsService.getPostSegments(this.post);\n      this.editing = false;\n    });\n  }\n}\n","export default \".mat-form-field {\\r\\n  width: 100%;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\ntextarea.mat-input-element {\\r\\n  resize: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0LXRleHRhcmVhL3Bvc3QtdGV4dGFyZWEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Bvc3QtdGV4dGFyZWEvcG9zdC10ZXh0YXJlYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG50ZXh0YXJlYS5tYXQtaW5wdXQtZWxlbWVudCB7XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcbiJdfQ== */\"","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Employee, Post } from 'src/app/models';\nimport { EmployeesService } from 'src/app/services/employees.service';\n\n@Component({\n  selector: 'app-post-textarea',\n  templateUrl: './post-textarea.component.html',\n  styleUrls: ['./post-textarea.component.css']\n})\nexport class PostTextareaComponent implements OnInit {\n\n  @Input() post: Post;\n\n  @ViewChild('textarea', { static: false }) textarea: ElementRef<HTMLTextAreaElement>;\n\n  public employees$: Observable<Employee[]>;\n  public show: boolean;\n\n  private original: string;\n  private cursor: number;\n  private success: boolean;\n\n  constructor(\n    private employeesService: EmployeesService,\n  ) { }\n\n  ngOnInit() {\n    this.employees$ = this.employeesService.list();\n  }\n\n  open(): void {\n    this.show = true;\n\n    this.original = this.post.text;\n    this.cursor = this.textarea.nativeElement.selectionStart;\n  }\n\n  optionSelected(event: MatAutocompleteSelectedEvent): void {\n    const selected = event.option.value;\n    this.post.text = this.original.slice(0, this.cursor) + '@' + selected + this.original.slice(this.cursor);\n    this.success = true;\n  }\n\n  close(): void {\n\n    if (!this.success) {\n      this.post.text = this.original;\n    }\n\n    this.textarea.nativeElement.setSelectionRange(this.cursor, this.cursor);\n\n    this.success = false;\n    this.show = false;\n  }\n}\n","export default \".mat-card {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.mat-card .mat-button {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0cy9wb3N0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9wb3N0cy9wb3N0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkIHtcclxuICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZCAubWF0LWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Post } from '../../models';\nimport { PostsService } from '../../services/posts.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  posts$: Observable<Post[]>;\n\n  post = { text: '' } as Post;\n\n  constructor(\n    private postsService: PostsService,\n    public dialog: MatDialog,\n  ) { }\n\n  public ngOnInit(): void {\n    this.posts$ = this.postsService.list();\n  }\n\n  public createPost(): void {\n    if (this.post.text.length) {\n      this.post.date = new Date().toLocaleString();\n      this.postsService.create(this.post).subscribe(() => {\n        this.post = { text: '' } as Post;\n        this.posts$ = this.postsService.list();\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employee, Post, PostSegment } from '../models';\nimport { EmployeesService } from './employees.service';\n\nconst INITIAL_DATA: Post[] = [\n  { id: 4, date: new Date(2021, 2, 4).toLocaleString(), text: 'Welcome to the company @1!!!' },\n  { id: 3, date: new Date(2021, 2, 3).toLocaleString(), text: 'Thanks, @2, @3, @4' },\n  { id: 2, date: new Date(2021, 2, 2).toLocaleString(), text: '@3 @2 @5' },\n  { id: 1, date: new Date(2021, 2, 1).toLocaleString(), text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.Ut tortor augue, commodo id commodo vitae, aliquam sit amet neque.Sed eu bibendum arcu.Suspendisse non tincidunt ligula.Praesent vel ipsum velit.Proin ante lacus, vulputate et accumsan sed, facilisis quis eros.Proin et imperdiet ipsum.Proin eget dictum lacus.Phasellus elementum eros eget urna faucibus luctus.Praesent ac sollicitudin nisi, at laoreet enim.Suspendisse potenti.Pellentesque efficitur tellus ac purus imperdiet luctus.Vestibulum id nulla ut est porta hendrerit.Aliquam pulvinar pretium diam at aliquam.' },\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  private employees: Employee[];\n\n  constructor(\n    private employeesService: EmployeesService,\n  ) {\n    this.employeesService.list().subscribe(employees => this.employees = employees);\n  }\n\n\n  public list(): Observable<Post[]> {\n\n    const stored = localStorage.getItem('valispace-challenge-posts');\n\n    if (stored) {\n      return of(JSON.parse(stored));\n    }\n\n    localStorage.setItem('valispace-challenge-posts', JSON.stringify(INITIAL_DATA));\n    return of(INITIAL_DATA);\n  }\n\n  public create(post: Post): Observable<void> {\n\n    return this.list().pipe(map(posts => {\n\n      post.id = posts[posts.length - 1].id + 1;\n      this.parsePostToSave(post);\n\n      posts.unshift(post);\n      localStorage.setItem('valispace-challenge-posts', JSON.stringify(posts));\n    }));\n  }\n\n  public update(post: Post): Observable<void> {\n\n    return this.list().pipe(map(posts => {\n\n      const index = posts.findIndex(p => p.id === post.id);\n      posts[index] = post;\n\n      this.parsePostToSave(post);\n      localStorage.setItem('valispace-challenge-posts', JSON.stringify(posts));\n    }));\n  }\n\n  private parsePostToSave(post: Post): Post {\n\n    const regExp = /@[\\w\\-_]+/g;\n    const matches = post.text.match(regExp);\n\n    if (matches) {\n      for (const match of matches) {\n        const username = match.slice(1);\n        const employee = this.employees.find(e => e.username === username);\n        if (employee) {\n          const index = post.text.indexOf(match);\n          post.text = this.replaceInIndex(post.text, index + 1, employee.id, username.length);\n        }\n      }\n    }\n\n    return post;\n  }\n\n  public getPostSegments(post: Post): PostSegment[] {\n\n    const segments: PostSegment[] = [];\n\n    const regExp = /@\\d+/g;\n    const matches = post.text.match(regExp);\n\n    let lastIndex = 0;\n\n    if (matches) {\n      for (const match of matches) {\n        const id = Number(match.slice(1));\n        const employee = this.employees.find(e => e.id === id);\n        if (employee) {\n          const index = post.text.indexOf(match, lastIndex);\n          if (lastIndex < index) {\n            segments.push({ text: post.text.substr(lastIndex, index - lastIndex) });\n          }\n          segments.push({ text: '@' + employee.username, employee });\n          post.text = this.replaceInIndex(post.text, index + 1, employee.username, match.length - 1);\n          lastIndex = index + employee.username.length + 1;\n        }\n      }\n    }\n\n    if (lastIndex < post.text.length) {\n      segments.push({ text: post.text.substr(lastIndex, post.text.length - lastIndex) });\n    }\n\n    return segments;\n  }\n\n  private replaceInIndex(str: string, index: number, replacer: any, length: number): string {\n    return str.slice(0, index) + replacer + str.slice(index + length);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}