{"version":3,"sources":["src/app/services/employees.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employee } from '../models';\n\n\nconst INITIAL_DATA: Employee[] = [\n  { id: 1, username: 'mathilde', phone: 992312312, role: 'CEO', name: 'Mathilde Saylors' },\n  { id: 2, username: 'alia', phone: 986733455, role: 'Designer', name: 'Alia Ginder' },\n  { id: 3, username: 'freeman', phone: 971232343, role: 'Developer ', name: 'Freeman Litten' },\n  { id: 4, username: 'piedad', phone: 992362345, role: 'Sales ', name: 'Piedad Dewald' },\n  { id: 5, username: 'beau', phone: 912342303, role: 'PR ', name: 'Beau Siegel' },\n];\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesService {\n\n  constructor() { }\n\n  public list(): Observable<Employee[]> {\n\n    const stored = localStorage.getItem('valispace-challenge-employees');\n\n    if (stored) {\n      return of(JSON.parse(stored));\n    }\n\n    localStorage.setItem('valispace-challenge-employees', JSON.stringify(INITIAL_DATA));\n    return of(INITIAL_DATA);\n  }\n\n  public get(id: number): Observable<Employee> {\n    return this.list().pipe(map(employees => employees.find(e => e.id === id)));\n  }\n\n  public create(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      if (employees.some(e => e.id === employee.id)) {\n        throw Error('same id');\n      }\n\n      if (employees.some(e => e.phone === employee.phone)) {\n        throw Error('same phone');\n      }\n\n      employees.push(employee);\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n  public update(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      if (employees.some(e => e.phone === employee.phone)) {\n        throw Error('same phone');\n      }\n\n      const index = employees.findIndex(e => e.id === employee.id);\n      employees[index] = employee;\n\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n  public delete(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      const index = employees.findIndex(e => e.id === employee.id);\n      employees.splice(index, 1);\n\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"common-es5.js"}