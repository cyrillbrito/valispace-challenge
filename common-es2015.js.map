{"version":3,"sources":["./src/app/services/employees.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employee } from '../models';\n\n\nconst INITIAL_DATA: Employee[] = [\n  { id: 1, username: 'mathilde', phone: 992312312, role: 'CEO', name: 'Mathilde Saylors' },\n  { id: 2, username: 'alia', phone: 986733455, role: 'Designer', name: 'Alia Ginder' },\n  { id: 3, username: 'freeman', phone: 971232343, role: 'Developer ', name: 'Freeman Litten' },\n  { id: 4, username: 'piedad', phone: 992362345, role: 'Sales ', name: 'Piedad Dewald' },\n  { id: 5, username: 'beau', phone: 912342303, role: 'PR ', name: 'Beau Siegel' },\n];\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeesService {\n\n  constructor() { }\n\n  public list(): Observable<Employee[]> {\n\n    const stored = localStorage.getItem('valispace-challenge-employees');\n\n    if (stored) {\n      return of(JSON.parse(stored));\n    }\n\n    localStorage.setItem('valispace-challenge-employees', JSON.stringify(INITIAL_DATA));\n    return of(INITIAL_DATA);\n  }\n\n  public get(id: number): Observable<Employee> {\n    return this.list().pipe(map(employees => employees.find(e => e.id === id)));\n  }\n\n  public create(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      if (employees.some(e => e.id === employee.id)) {\n        throw Error('same id');\n      }\n\n      if (employees.some(e => e.phone === employee.phone)) {\n        throw Error('same phone');\n      }\n\n      employees.push(employee);\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n  public update(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      if (employees.some(e => e.phone === employee.phone)) {\n        throw Error('same phone');\n      }\n\n      const index = employees.findIndex(e => e.id === employee.id);\n      employees[index] = employee;\n\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n  public delete(employee: Employee): Observable<void> {\n    return this.list().pipe(map(employees => {\n\n      const index = employees.findIndex(e => e.id === employee.id);\n      employees.splice(index, 1);\n\n      localStorage.setItem('valispace-challenge-employees', JSON.stringify(employees));\n    }));\n  }\n\n}\n"],"sourceRoot":"webpack:///"}