{"version":3,"sources":["src/app/home/post-card/post-card.component.html","src/app/home/post-textarea/post-textarea.component.html","src/app/home/posts/posts.component.html","src/app/home/home-routing.module.ts","src/app/home/home.module.ts","src/app/home/post-card/post-card.component.css","src/app/home/post-card/post-card.component.ts","src/app/home/post-textarea/post-textarea.component.css","src/app/home/post-textarea/post-textarea.component.ts","src/app/home/posts/posts.component.css","src/app/home/posts/posts.component.ts","src/app/services/posts.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<mat-card>\\n\\n  <mat-card-header>\\n    <mat-card-subtitle>{{ post.date }}</mat-card-subtitle>\\n    <button mat-icon-button (click)=\\\"editPost(post)\\\" class=\\\"card-action\\\" *ngIf=\\\"!editing\\\">\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n  </mat-card-header>\\n\\n  <mat-card-content *ngIf=\\\"editing\\\">\\n    <app-post-textarea [post]=\\\"post\\\"></app-post-textarea>\\n  </mat-card-content>\\n\\n  <mat-card-content *ngIf=\\\"!editing\\\">\\n    <ng-container *ngFor=\\\"let segment of segments\\\">\\n      <span *ngIf=\\\"segment.employee\\\" class=\\\"user-highlight\\\" (click)=\\\"openEmployeeDetails(segment.employee)\\\">\\n        {{ segment.text }}\\n      </span>\\n      <ng-container *ngIf=\\\"!segment.employee\\\">\\n        {{ segment.text }}\\n      </ng-container>\\n    </ng-container>\\n  </mat-card-content>\\n\\n  <mat-card-actions *ngIf=\\\"editing\\\">\\n    <button mat-button (click)=\\\"cancelEdit(post)\\\">CANCEL</button>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"update()\\\">UPDATE POST</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\\n<ng-template #details let-employee>\\n  <h1>{{ employee.name }}</h1>\\n  <mat-divider></mat-divider>\\n  <p>Username: {{ employee.username }}</p>\\n  <p>Phone: {{ employee.phone }}</p>\\n  <p>Role: {{ employee.role }}</p>\\n</ng-template>\"","export default \"<mat-form-field appearance=\\\"outline\\\">\\n  <textarea #textarea matInput placeholder=\\\"What’s happening?\\\" rows=\\\"5\\\" (keydown.@)=\\\"open()\\\" [matAutocomplete]=\\\"auto\\\"\\n    [matAutocompleteDisabled]=\\\"!show\\\" [(ngModel)]=\\\"post.text\\\">\\n  </textarea>\\n</mat-form-field>\\n\\n<mat-autocomplete #auto=\\\"matAutocomplete\\\" (closed)=\\\"close($event)\\\" (optionSelected)=\\\"optionSelected($event)\\\">\\n  <mat-option *ngFor=\\\"let employee of employees$ | async\\\" [value]=\\\"employee.username\\\">\\n    {{ employee.username }}\\n  </mat-option>\\n</mat-autocomplete>\"","export default \"<mat-card>\\n\\n  <mat-card-content>\\n    <app-post-textarea [(post)]=\\\"post\\\"></app-post-textarea>\\n  </mat-card-content>\\n\\n  <mat-card-actions>\\n    <button mat-button color=\\\"accent\\\" (click)=\\\"createPost()\\\">CREATE POST</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\\n<mat-divider></mat-divider>\\n\\n<app-post-card *ngFor=\\\"let post of posts$ | async\\\" [post]=\\\"post\\\">\\n</app-post-card>\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PostsComponent } from './posts/posts.component';\n\nconst routes: Routes = [{ path: '', component: PostsComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatCardModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatInputModule\n} from '@angular/material';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { PostCardComponent } from './post-card/post-card.component';\nimport { PostTextareaComponent } from './post-textarea/post-textarea.component';\nimport { PostsComponent } from './posts/posts.component';\n\n\n@NgModule({\n  declarations: [\n    PostCardComponent,\n    PostsComponent,\n    PostTextareaComponent,\n  ],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n  ]\n})\nexport class HomeModule { }\n","export default \".mat-card {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.user-highlight {\\r\\n  color: rgb(27, 149, 224);\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.user-highlight:hover {\\r\\n  text-decoration: underline;\\r\\n}\\r\\n\\r\\n.card-action {\\r\\n  margin-left: auto;\\r\\n  margin-top: -10px;\\r\\n}\\r\\n\\r\\n.mat-card .mat-button {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0LWNhcmQvcG9zdC1jYXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx3QkFBd0I7RUFDeEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Bvc3QtY2FyZC9wb3N0LWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZCB7XHJcbiAgbWFyZ2luOiAyMHB4O1xyXG59XHJcblxyXG4udXNlci1oaWdobGlnaHQge1xyXG4gIGNvbG9yOiByZ2IoMjcsIDE0OSwgMjI0KTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi51c2VyLWhpZ2hsaWdodDpob3ZlciB7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbn1cclxuXHJcbi5jYXJkLWFjdGlvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogLTEwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZCAubWF0LWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG4iXX0= */\"","import { Component, Input, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Employee, Post, PostSegment } from 'src/app/models';\nimport { PostsService } from 'src/app/services/posts.service';\n\n\n@Component({\n  selector: 'app-post-card',\n  templateUrl: './post-card.component.html',\n  styleUrls: ['./post-card.component.css']\n})\nexport class PostCardComponent implements OnInit {\n\n  @Input() post: Post;\n\n  @ViewChild('details', { static: false }) detailsTemplateRef: TemplateRef<any>;\n\n  public segments: PostSegment[];\n  public editing: boolean;\n\n  private original: string;\n\n  constructor(\n    private postsService: PostsService,\n    public dialog: MatDialog,\n  ) { }\n\n  public ngOnInit() {\n    this.segments = this.postsService.getPostSegments(this.post);\n  }\n\n  public openEmployeeDetails(employee: Employee): void {\n    this.dialog.open(this.detailsTemplateRef, { data: employee });\n  }\n\n  public editPost(post: Post): void {\n    this.editing = true;\n    this.original = post.text;\n  }\n\n  public cancelEdit(post: Post): void {\n    post.text = this.original;\n    this.editing = false;\n  }\n\n  public update(): void {\n    this.postsService.update(this.post).subscribe(() => {\n      this.segments = this.postsService.getPostSegments(this.post);\n      this.editing = false;\n    });\n  }\n}\n","export default \".mat-form-field {\\r\\n  width: 100%;\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\ntextarea.mat-input-element {\\r\\n  resize: none;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0LXRleHRhcmVhL3Bvc3QtdGV4dGFyZWEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Bvc3QtdGV4dGFyZWEvcG9zdC10ZXh0YXJlYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcblxyXG50ZXh0YXJlYS5tYXQtaW5wdXQtZWxlbWVudCB7XHJcbiAgcmVzaXplOiBub25lO1xyXG59XHJcbiJdfQ== */\"","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatAutocompleteSelectedEvent } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Employee, Post } from 'src/app/models';\nimport { EmployeesService } from 'src/app/services/employees.service';\n\n@Component({\n  selector: 'app-post-textarea',\n  templateUrl: './post-textarea.component.html',\n  styleUrls: ['./post-textarea.component.css']\n})\nexport class PostTextareaComponent implements OnInit {\n\n  @Input() post: Post;\n\n  @ViewChild('textarea', { static: false }) textarea: ElementRef<HTMLTextAreaElement>;\n\n  public employees$: Observable<Employee[]>;\n  public show: boolean;\n\n  private original: string;\n  private cursor: number;\n  private success: boolean;\n\n  constructor(\n    private employeesService: EmployeesService,\n  ) { }\n\n  ngOnInit() {\n    this.employees$ = this.employeesService.list();\n  }\n\n  open(): void {\n    this.show = true;\n\n    this.original = this.post.text;\n    this.cursor = this.textarea.nativeElement.selectionStart;\n  }\n\n  optionSelected(event: MatAutocompleteSelectedEvent): void {\n    const selected = event.option.value;\n    this.post.text = this.original.slice(0, this.cursor) + '@' + selected + this.original.slice(this.cursor);\n    this.success = true;\n  }\n\n  close(): void {\n\n    if (!this.success) {\n      this.post.text = this.original;\n    }\n\n    this.textarea.nativeElement.setSelectionRange(this.cursor, this.cursor);\n\n    this.success = false;\n    this.show = false;\n  }\n}\n","export default \".mat-card {\\r\\n  margin: 20px;\\r\\n}\\r\\n\\r\\n.mat-card .mat-button {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wb3N0cy9wb3N0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9wb3N0cy9wb3N0cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1jYXJkIHtcclxuICBtYXJnaW46IDIwcHg7XHJcbn1cclxuXHJcbi5tYXQtY2FyZCAubWF0LWJ1dHRvbiB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { Observable } from 'rxjs';\nimport { Post } from '../../models';\nimport { PostsService } from '../../services/posts.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  posts$: Observable<Post[]>;\n\n  post = { text: '' } as Post;\n\n  constructor(\n    private postsService: PostsService,\n    public dialog: MatDialog,\n  ) { }\n\n  public ngOnInit(): void {\n    this.posts$ = this.postsService.list();\n  }\n\n  public createPost(): void {\n    if (this.post.text.length) {\n      this.post.date = new Date().toLocaleString();\n      this.postsService.create(this.post).subscribe(() => {\n        this.post = { text: '' } as Post;\n        this.posts$ = this.postsService.list();\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Employee, Post, PostSegment } from '../models';\nimport { EmployeesService } from './employees.service';\n\nconst INITIAL_DATA: Post[] = [\n  { id: 4, date: new Date(2021, 2, 4).toLocaleString(), text: 'Welcome to the company @1!!!' },\n  { id: 3, date: new Date(2021, 2, 3).toLocaleString(), text: 'Thanks, @2, @3, @4' },\n  { id: 2, date: new Date(2021, 2, 2).toLocaleString(), text: '@3 @2 @5' },\n  { id: 1, date: new Date(2021, 2, 1).toLocaleString(), text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.Ut tortor augue, commodo id commodo vitae, aliquam sit amet neque.Sed eu bibendum arcu.Suspendisse non tincidunt ligula.Praesent vel ipsum velit.Proin ante lacus, vulputate et accumsan sed, facilisis quis eros.Proin et imperdiet ipsum.Proin eget dictum lacus.Phasellus elementum eros eget urna faucibus luctus.Praesent ac sollicitudin nisi, at laoreet enim.Suspendisse potenti.Pellentesque efficitur tellus ac purus imperdiet luctus.Vestibulum id nulla ut est porta hendrerit.Aliquam pulvinar pretium diam at aliquam.' },\n];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  private employees: Employee[];\n\n  constructor(\n    private employeesService: EmployeesService,\n  ) {\n    this.employeesService.list().subscribe(employees => this.employees = employees);\n  }\n\n\n  public list(): Observable<Post[]> {\n\n    const stored = localStorage.getItem('valispace-challenge-posts');\n\n    if (stored) {\n      return of(JSON.parse(stored));\n    }\n\n    localStorage.setItem('valispace-challenge-posts', JSON.stringify(INITIAL_DATA));\n    return of(INITIAL_DATA);\n  }\n\n  public create(post: Post): Observable<void> {\n\n    return this.list().pipe(map(posts => {\n\n      post.id = posts[posts.length - 1].id + 1;\n      this.parsePostToSave(post);\n\n      posts.unshift(post);\n      localStorage.setItem('valispace-challenge-posts', JSON.stringify(posts));\n    }));\n  }\n\n  public update(post: Post): Observable<void> {\n\n    return this.list().pipe(map(posts => {\n\n      const index = posts.findIndex(p => p.id === post.id);\n      posts[index] = post;\n\n      this.parsePostToSave(post);\n      localStorage.setItem('valispace-challenge-posts', JSON.stringify(posts));\n    }));\n  }\n\n  private parsePostToSave(post: Post): Post {\n\n    const regExp = /@[\\w\\-_]+/g;\n    const matches = post.text.match(regExp);\n\n    if (matches) {\n      for (const match of matches) {\n        const username = match.slice(1);\n        const employee = this.employees.find(e => e.username === username);\n        if (employee) {\n          const index = post.text.indexOf(match);\n          post.text = this.replaceInIndex(post.text, index + 1, employee.id, username.length);\n        }\n      }\n    }\n\n    return post;\n  }\n\n  public getPostSegments(post: Post): PostSegment[] {\n\n    const segments: PostSegment[] = [];\n\n    const regExp = /@\\d+/g;\n    const matches = post.text.match(regExp);\n\n    let lastIndex = 0;\n\n    if (matches) {\n      for (const match of matches) {\n        const id = Number(match.slice(1));\n        const employee = this.employees.find(e => e.id === id);\n        if (employee) {\n          const index = post.text.indexOf(match, lastIndex);\n          if (lastIndex < index) {\n            segments.push({ text: post.text.substr(lastIndex, index - lastIndex) });\n          }\n          segments.push({ text: '@' + employee.username, employee });\n          post.text = this.replaceInIndex(post.text, index + 1, employee.username, match.length - 1);\n          lastIndex = index + employee.username.length + 1;\n        }\n      }\n    }\n\n    if (lastIndex < post.text.length) {\n      segments.push({ text: post.text.substr(lastIndex, post.text.length - lastIndex) });\n    }\n\n    return segments;\n  }\n\n  private replaceInIndex(str: string, index: number, replacer: any, length: number): string {\n    return str.slice(0, index) + replacer + str.slice(index + length);\n  }\n\n}\n"],"sourceRoot":"webpack:///","file":"home-home-module-es5.js"}